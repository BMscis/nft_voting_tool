#pragma version 8
intcblock 0 1 10 5
bytecblock 0x 0x068101 0x766f74655f6964 0x6f7074696f6e5f636f756e7473 0x69735f626f6f747374726170706564 0x766f7465725f636f756e74 0x636c6f73655f74696d65 0x746f74616c5f6f7074696f6e73 0x56 0x6f75616964 0x736e617073686f745f7075626c69635f6b6579 0x6d657461646174615f697066735f636964 0x73746172745f74696d65 0x656e645f74696d65 0x71756f72756d 0x6e66745f696d6167655f75726c 0x151f7c75 0x6e66745f61737365745f6964 0x2c
txn NumAppArgs
intc_0 // 0
==
bnz main_l14
txna ApplicationArgs 0
pushbytes 0x101cea00 // "opup_bootstrap(pay)uint64"
==
bnz main_l13
txna ApplicationArgs 0
pushbytes 0xae897f6b // "create(string,byte[],string,uint64,uint64,uint8[],uint64,string)void"
==
bnz main_l12
txna ApplicationArgs 0
pushbytes 0xa4e8d164 // "bootstrap(pay)void"
==
bnz main_l11
txna ApplicationArgs 0
pushbytes 0x9656047a // "close()void"
==
bnz main_l10
txna ApplicationArgs 0
pushbytes 0xbcb15896 // "get_preconditions(byte[])(uint64,uint64,uint64,uint64)"
==
bnz main_l9
txna ApplicationArgs 0
pushbytes 0x84a53c6e // "vote(pay,byte[],uint8[])void"
==
bnz main_l8
err
main_l8:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
store 13
txna ApplicationArgs 2
store 14
txn GroupIndex
intc_1 // 1
-
store 12
load 12
gtxns TypeEnum
intc_1 // pay
==
assert
load 12
load 13
load 14
callsub vote_11
intc_1 // 1
return
main_l9:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
callsub getpreconditions_10
store 11
bytec 16 // 0x151f7c75
load 11
concat
log
intc_1 // 1
return
main_l10:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub close_5
intc_1 // 1
return
main_l11:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txn GroupIndex
intc_1 // 1
-
store 10
load 10
gtxns TypeEnum
intc_1 // pay
==
assert
load 10
callsub bootstrap_4
intc_1 // 1
return
main_l12:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
==
&&
assert
txna ApplicationArgs 1
store 2
txna ApplicationArgs 2
store 3
txna ApplicationArgs 3
store 4
txna ApplicationArgs 4
btoi
store 5
txna ApplicationArgs 5
btoi
store 6
txna ApplicationArgs 6
store 7
txna ApplicationArgs 7
btoi
store 8
txna ApplicationArgs 8
store 9
load 2
load 3
load 4
load 5
load 6
load 7
load 8
load 9
callsub create_3
intc_1 // 1
return
main_l13:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txn GroupIndex
intc_1 // 1
-
store 0
load 0
gtxns TypeEnum
intc_1 // pay
==
assert
load 0
callsub opupbootstrap_1
store 1
bytec 16 // 0x151f7c75
load 1
itob
concat
log
intc_1 // 1
return
main_l14:
txn OnCompletion
intc_3 // DeleteApplication
==
bnz main_l16
err
main_l16:
txn ApplicationID
intc_0 // 0
!=
assert
callsub delete_0
intc_1 // 1
return

// delete
delete_0:
proto 0 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
pushint TMPL_DELETABLE // TMPL_DELETABLE
// Check app is deletable
assert
retsub

// opup_bootstrap
opupbootstrap_1:
proto 1 1
intc_0 // 0
frame_dig -1
gtxns Amount
pushint 100000 // 100000
>=
assert
callsub createopup_2
bytec 9 // "ouaid"
app_global_get
frame_bury 0
retsub

// create_opup
createopup_2:
proto 0 0
itxn_begin
pushint 6 // appl
itxn_field TypeEnum
pushbytes 0x0820020001311b221240001d361a0080044c6bea7212400001003119221231182213104488001123433119221240000100311822124423438a00003100320912442343 // 0x0820020001311b221240001d361a0080044c6bea7212400001003119221231182213104488001123433119221240000100311822124423438a00003100320912442343
itxn_field ApprovalProgram
pushbytes 0x08810043 // 0x08810043
itxn_field ClearStateProgram
intc_0 // 0
itxn_field Fee
itxn_submit
intc_0 // 0
bytec 9 // "ouaid"
app_global_get_ex
store 16
store 15
load 16
!
assert
bytec 9 // "ouaid"
itxn CreatedApplicationID
app_global_put
retsub

// create
create_3:
proto 8 0
intc_0 // 0
dup
bytec_0 // ""
intc_0 // 0
dupn 2
frame_dig -5
frame_dig -4
<=
// End time should be after start time
assert
frame_dig -4
global LatestTimestamp
>=
// End time should be in the future
assert
intc_0 // 0
bytec_2 // "vote_id"
app_global_get_ex
store 18
store 17
load 18
!
assert
bytec_2 // "vote_id"
frame_dig -8
extract 2 0
app_global_put
intc_0 // 0
bytec 10 // "snapshot_public_key"
app_global_get_ex
store 20
store 19
load 20
!
assert
bytec 10 // "snapshot_public_key"
frame_dig -7
extract 2 0
app_global_put
intc_0 // 0
bytec 11 // "metadata_ipfs_cid"
app_global_get_ex
store 22
store 21
load 22
!
assert
bytec 11 // "metadata_ipfs_cid"
frame_dig -6
extract 2 0
app_global_put
intc_0 // 0
bytec 12 // "start_time"
app_global_get_ex
store 24
store 23
load 24
!
assert
bytec 12 // "start_time"
frame_dig -5
app_global_put
intc_0 // 0
bytec 13 // "end_time"
app_global_get_ex
store 26
store 25
load 26
!
assert
bytec 13 // "end_time"
frame_dig -4
app_global_put
intc_0 // 0
bytec 14 // "quorum"
app_global_get_ex
store 28
store 27
load 28
!
assert
bytec 14 // "quorum"
frame_dig -2
app_global_put
bytec 4 // "is_bootstrapped"
intc_0 // 0
app_global_put
bytec 5 // "voter_count"
intc_0 // 0
app_global_put
bytec 6 // "close_time"
intc_0 // 0
app_global_put
intc_0 // 0
bytec 15 // "nft_image_url"
app_global_get_ex
store 30
store 29
load 30
!
assert
bytec 15 // "nft_image_url"
frame_dig -1
extract 2 0
app_global_put
bytec 17 // "nft_asset_id"
intc_0 // 0
app_global_put
frame_dig -3
intc_0 // 0
extract_uint16
frame_bury 0
frame_dig 0
// option_counts should be non-empty
assert
frame_dig -3
intc_0 // 0
extract_uint16
frame_bury 1
frame_dig 1
pushint 112 // 112
<=
// Can't have more than 112 questions
assert
intc_0 // 0
bytec_3 // "option_counts"
app_global_get_ex
store 32
store 31
load 32
!
assert
bytec_3 // "option_counts"
frame_dig -3
app_global_put
bytec_3 // "option_counts"
app_global_get
frame_bury 2
intc_0 // 0
store 34
frame_dig 2
intc_0 // 0
extract_uint16
frame_bury 3
frame_dig 3
store 35
intc_0 // 0
store 36
create_3_l1:
load 36
load 35
<
bz create_3_l7
global OpcodeBudget
pushint 100 // 100
<
bnz create_3_l4
create_3_l3:
frame_dig 2
intc_1 // 1
load 36
*
pushint 2 // 2
+
getbyte
frame_bury 4
load 34
frame_dig 4
+
store 34
load 36
intc_1 // 1
+
store 36
b create_3_l1
create_3_l4:
pushint 600 // 600
intc_2 // 10
+
store 37
create_3_l5:
load 37
global OpcodeBudget
>
bz create_3_l3
itxn_begin
pushint 6 // appl
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
intc_3 // DeleteApplication
itxn_field OnCompletion
bytec_1 // 0x068101
itxn_field ApprovalProgram
bytec_1 // 0x068101
itxn_field ClearStateProgram
itxn_submit
b create_3_l5
create_3_l7:
load 34
store 33
load 33
pushint 128 // 128
<=
// Can't have more than 128 vote options
assert
intc_0 // 0
bytec 7 // "total_options"
app_global_get_ex
store 39
store 38
load 39
!
assert
bytec 7 // "total_options"
load 33
app_global_put
retsub

// bootstrap
bootstrap_4:
proto 1 0
intc_0 // 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
bytec 4 // "is_bootstrapped"
app_global_get
!
// Already bootstrapped
assert
bytec 4 // "is_bootstrapped"
intc_1 // 1
app_global_put
pushint 303900 // 303900
bytec 7 // "total_options"
app_global_get
pushint 3200 // 3200
*
+
store 40
frame_dig -1
gtxns Receiver
global CurrentApplicationAddress
==
// Payment must be to app address
assert
load 40
itob
log
frame_dig -1
gtxns Amount
load 40
==
// Payment must be for the exact min balance requirement
assert
bytec 8 // "V"
bytec 7 // "total_options"
app_global_get
pushint 8 // 8
*
box_create
pop
callsub createopup_2
retsub

// close
close_5:
proto 0 0
bytec_0 // ""
intc_0 // 0
dupn 2
txn Sender
global CreatorAddress
==
// unauthorized
assert
pushint 20000 // 20000
intc_2 // 10
+
store 41
close_5_l1:
load 41
global OpcodeBudget
>
bnz close_5_l17
bytec 6 // "close_time"
app_global_get
intc_0 // 0
==
// Already closed
assert
bytec 6 // "close_time"
global LatestTimestamp
app_global_put
pushbytes 0x7b227374616e64617264223a226172633639222c226465736372697074696f6e223a2254686973206973206120766f74696e6720726573756c74204e465420666f7220766f74696e6720726f756e64207769746820494420 // "{\"standard\":\"arc69\",\"description\":\"This is a voting result NFT for voting round with ID "
bytec_2 // "vote_id"
app_global_get
concat
pushbytes 0x2e222c2270726f70657274696573223a7b226d65746164617461223a22697066733a2f2f // ".\",\"properties\":{\"metadata\":\"ipfs://"
concat
bytec 11 // "metadata_ipfs_cid"
app_global_get
concat
pushbytes 0x222c226964223a22 // "\",\"id\":\""
concat
bytec_2 // "vote_id"
app_global_get
concat
pushbytes 0x222c2271756f72756d223a // "\",\"quorum\":"
concat
bytec 14 // "quorum"
app_global_get
callsub itoa_9
concat
pushbytes 0x2c22766f746572436f756e74223a // ",\"voterCount\":"
concat
bytec 5 // "voter_count"
app_global_get
callsub itoa_9
concat
pushbytes 0x2c2274616c6c696573223a5b // ",\"tallies\":["
concat
store 42
bytec_3 // "option_counts"
app_global_get
frame_bury 0
frame_dig 0
intc_0 // 0
extract_uint16
frame_bury 1
frame_dig 1
store 43
intc_0 // 0
store 44
intc_0 // 0
store 45
intc_0 // 0
store 46
close_5_l3:
load 46
load 43
<
bz close_5_l18
frame_dig 0
intc_1 // 1
load 46
*
pushint 2 // 2
+
getbyte
frame_bury 2
frame_dig 2
store 47
intc_0 // 0
store 48
close_5_l5:
load 48
load 47
<
bnz close_5_l7
load 46
intc_1 // 1
+
store 46
b close_5_l3
close_5_l7:
pushint 8 // 8
load 45
*
store 49
bytec 8 // "V"
load 49
pushint 8 // 8
box_extract
btoi
store 44
load 42
load 48
intc_0 // 0
==
bnz close_5_l16
bytec_0 // ""
close_5_l9:
concat
load 44
callsub itoa_9
concat
load 48
load 47
intc_1 // 1
-
==
bnz close_5_l12
bytec 18 // ","
close_5_l11:
concat
store 42
load 45
intc_1 // 1
+
store 45
load 48
intc_1 // 1
+
store 48
b close_5_l5
close_5_l12:
pushbytes 0x5d // "]"
load 46
load 43
intc_1 // 1
-
==
bnz close_5_l15
bytec 18 // ","
close_5_l14:
concat
b close_5_l11
close_5_l15:
bytec_0 // ""
b close_5_l14
close_5_l16:
pushbytes 0x5b // "["
b close_5_l9
close_5_l17:
itxn_begin
pushint 6 // appl
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
intc_3 // DeleteApplication
itxn_field OnCompletion
bytec_1 // 0x068101
itxn_field ApprovalProgram
bytec_1 // 0x068101
itxn_field ClearStateProgram
itxn_submit
b close_5_l1
close_5_l18:
itxn_begin
pushint 3 // acfg
itxn_field TypeEnum
intc_1 // 1
itxn_field ConfigAssetTotal
intc_0 // 0
itxn_field ConfigAssetDecimals
intc_0 // 0
itxn_field ConfigAssetDefaultFrozen
pushbytes 0x5b564f544520524553554c545d20 // "[VOTE RESULT] "
bytec_2 // "vote_id"
app_global_get
concat
itxn_field ConfigAssetName
pushbytes 0x564f544552534c54 // "VOTERSLT"
itxn_field ConfigAssetUnitName
bytec 15 // "nft_image_url"
app_global_get
itxn_field ConfigAssetURL
load 42
pushbytes 0x5d7d7d // "]}}"
concat
itxn_field Note
itxn_submit
bytec 17 // "nft_asset_id"
itxn CreatedAssetID
app_global_put
retsub

// allowed_to_vote
allowedtovote_6:
proto 1 1
pushint 2000 // 2000
intc_2 // 10
+
store 50
allowedtovote_6_l1:
load 50
global OpcodeBudget
>
bz allowedtovote_6_l3
itxn_begin
pushint 6 // appl
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
intc_3 // DeleteApplication
itxn_field OnCompletion
bytec_1 // 0x068101
itxn_field ApprovalProgram
bytec_1 // 0x068101
itxn_field ClearStateProgram
itxn_submit
b allowedtovote_6_l1
allowedtovote_6_l3:
txn Sender
frame_dig -1
bytec 10 // "snapshot_public_key"
app_global_get
ed25519verify_bare
retsub

// voting_open
votingopen_7:
proto 0 1
bytec 4 // "is_bootstrapped"
app_global_get
intc_1 // 1
==
bytec 6 // "close_time"
app_global_get
intc_0 // 0
==
&&
global LatestTimestamp
bytec 12 // "start_time"
app_global_get
>=
&&
global LatestTimestamp
bytec 13 // "end_time"
app_global_get
<
&&
retsub

// already_voted
alreadyvoted_8:
proto 0 1
bytec_0 // ""
txn Sender
frame_bury 0
frame_dig 0
len
pushint 32 // 32
==
assert
frame_dig 0
box_len
store 52
store 51
load 52
frame_bury 0
retsub

// itoa
itoa_9:
proto 1 1
frame_dig -1
intc_0 // 0
==
bnz itoa_9_l5
frame_dig -1
intc_2 // 10
/
intc_0 // 0
>
bnz itoa_9_l4
bytec_0 // ""
itoa_9_l3:
pushbytes 0x30313233343536373839 // "0123456789"
frame_dig -1
intc_2 // 10
%
intc_1 // 1
extract3
concat
b itoa_9_l6
itoa_9_l4:
frame_dig -1
intc_2 // 10
/
callsub itoa_9
b itoa_9_l3
itoa_9_l5:
pushbytes 0x30 // "0"
itoa_9_l6:
retsub

// get_preconditions
getpreconditions_10:
proto 1 1
bytec_0 // ""
intc_0 // 0
dupn 5
bytec_0 // ""
dup
callsub votingopen_7
frame_bury 1
frame_dig -1
extract 2 0
callsub allowedtovote_6
frame_bury 2
callsub alreadyvoted_8
frame_bury 3
global LatestTimestamp
frame_bury 4
frame_dig 1
itob
frame_dig 2
itob
concat
frame_dig 3
itob
concat
frame_dig 4
itob
concat
frame_bury 0
retsub

// vote
vote_11:
proto 3 0
bytec_0 // ""
intc_0 // 0
dupn 7
bytec_0 // ""
pushint 7700 // 7700
intc_2 // 10
+
store 53
vote_11_l1:
load 53
global OpcodeBudget
>
bnz vote_11_l5
frame_dig -2
extract 2 0
callsub allowedtovote_6
// Not allowed to vote
assert
callsub votingopen_7
// Voting not open
assert
callsub alreadyvoted_8
!
// Already voted
assert
bytec_3 // "option_counts"
app_global_get
frame_bury 0
frame_dig 0
intc_0 // 0
extract_uint16
frame_bury 1
frame_dig 1
store 54
frame_dig -1
intc_0 // 0
extract_uint16
frame_bury 2
frame_dig 2
load 54
==
// Number of answers incorrect
assert
pushint 2500 // 2500
pushint 34 // 34
intc_1 // 1
frame_dig -1
intc_0 // 0
extract_uint16
frame_bury 4
frame_dig 4
*
+
pushint 400 // 400
*
+
store 55
frame_dig -3
gtxns Receiver
global CurrentApplicationAddress
==
// Payment must be to app address
assert
load 55
itob
log
frame_dig -3
gtxns Amount
load 55
==
// Payment must be the exact min balance requirement
assert
intc_0 // 0
store 56
intc_0 // 0
store 57
vote_11_l3:
load 57
load 54
<
bz vote_11_l6
frame_dig -1
intc_1 // 1
load 57
*
pushint 2 // 2
+
getbyte
frame_bury 5
frame_dig 0
intc_1 // 1
load 57
*
pushint 2 // 2
+
getbyte
frame_bury 7
frame_dig 5
frame_dig 7
<
// Answer option index invalid
assert
pushint 8 // 8
load 56
frame_dig 5
+
*
store 58
bytec 8 // "V"
load 58
pushint 8 // 8
box_extract
btoi
store 59
bytec 8 // "V"
load 58
load 59
intc_1 // 1
+
itob
box_replace
load 56
frame_dig 7
+
store 56
load 57
intc_1 // 1
+
store 57
b vote_11_l3
vote_11_l5:
itxn_begin
pushint 6 // appl
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
intc_3 // DeleteApplication
itxn_field OnCompletion
bytec_1 // 0x068101
itxn_field ApprovalProgram
bytec_1 // 0x068101
itxn_field ClearStateProgram
itxn_submit
b vote_11_l1
vote_11_l6:
txn Sender
frame_bury 9
frame_dig 9
len
pushint 32 // 32
==
assert
frame_dig 9
box_del
pop
frame_dig 9
frame_dig -1
box_put
bytec 5 // "voter_count"
bytec 5 // "voter_count"
app_global_get
intc_1 // 1
+
app_global_put
retsub