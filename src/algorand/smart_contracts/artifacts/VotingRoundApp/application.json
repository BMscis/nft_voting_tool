{
    "hints": {
        "create(string,byte[],string,uint64,uint64,uint64,string)void": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "bootstrap(pay,byte[16][])void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "close()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_preconditions(byte[])(uint64,uint64,uint64,uint64)": {
            "read_only": true,
            "structs": {
                "output": {
                    "name": "VotingPreconditions",
                    "elements": [
                        [
                            "is_voting_open",
                            "uint64"
                        ],
                        [
                            "is_allowed_to_vote",
                            "uint64"
                        ],
                        [
                            "has_already_voted",
                            "uint64"
                        ],
                        [
                            "current_time",
                            "uint64"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "vote(pay,byte[],byte[16])void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 4,
            "num_uints": 7
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "close_time": {
                    "type": "uint64",
                    "key": "close_time",
                    "descr": "The unix timestamp of the time the vote was closed."
                },
                "end_time": {
                    "type": "uint64",
                    "key": "end_time",
                    "descr": "The unix timestamp of the ending time of voting."
                },
                "is_bootstrapped": {
                    "type": "uint64",
                    "key": "is_bootstrapped",
                    "descr": "Whether or not the contract has been bootstrapped with answers"
                },
                "metadata_ipfs_cid": {
                    "type": "bytes",
                    "key": "metadata_ipfs_cid",
                    "descr": "The IPFS content ID of the voting metadata file."
                },
                "nft_asset_id": {
                    "type": "uint64",
                    "key": "nft_asset_id",
                    "descr": "The asset ID of a result NFT if one has been created."
                },
                "nft_image_url": {
                    "type": "bytes",
                    "key": "nft_image_url",
                    "descr": "The IPFS URL of the default image to use as the media of the result NFT."
                },
                "quorum": {
                    "type": "uint64",
                    "key": "quorum",
                    "descr": "The minimum number of voters to reach quorum."
                },
                "snapshot_public_key": {
                    "type": "bytes",
                    "key": "snapshot_public_key",
                    "descr": "The public key of the Ed25519 compatible private key that was used to encrypt entries in the vote gating snapshot."
                },
                "start_time": {
                    "type": "uint64",
                    "key": "start_time",
                    "descr": "The unix timestamp of the starting time of voting."
                },
                "vote_id": {
                    "type": "bytes",
                    "key": "vote_id",
                    "descr": "The identifier of this voting round."
                },
                "voter_count": {
                    "type": "uint64",
                    "key": "voter_count",
                    "descr": "The minimum number of voters who have voted."
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "VotingRoundApp",
        "methods": [
            {
                "name": "create",
                "args": [
                    {
                        "type": "string",
                        "name": "vote_id"
                    },
                    {
                        "type": "byte[]",
                        "name": "snapshot_public_key"
                    },
                    {
                        "type": "string",
                        "name": "metadata_ipfs_cid"
                    },
                    {
                        "type": "uint64",
                        "name": "start_time"
                    },
                    {
                        "type": "uint64",
                        "name": "end_time"
                    },
                    {
                        "type": "uint64",
                        "name": "quorum"
                    },
                    {
                        "type": "string",
                        "name": "nft_image_url"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "bootstrap",
                "args": [
                    {
                        "type": "pay",
                        "name": "fund_min_bal_req"
                    },
                    {
                        "type": "byte[16][]",
                        "name": "answers"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "close",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "get_preconditions",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "signature"
                    }
                ],
                "returns": {
                    "type": "(uint64,uint64,uint64,uint64)"
                }
            },
            {
                "name": "vote",
                "args": [
                    {
                        "type": "pay",
                        "name": "fund_min_bal_req"
                    },
                    {
                        "type": "byte[]",
                        "name": "signature"
                    },
                    {
                        "type": "byte[16]",
                        "name": "answer_id"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "delete_application": "CALL"
    }
}