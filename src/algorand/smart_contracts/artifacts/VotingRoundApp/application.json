{
    "hints": {
        "create(byte[],string,uint64,uint64,uint64)void": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "bootstrap(byte[16][])void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_preconditions(byte[])(uint64,uint64,uint64,uint64)": {
            "read_only": true,
            "structs": {
                "output": {
                    "name": "VotingPreconditions",
                    "elements": [
                        [
                            "is_voting_open",
                            "uint64"
                        ],
                        [
                            "is_allowed_to_vote",
                            "uint64"
                        ],
                        [
                            "has_already_voted",
                            "uint64"
                        ],
                        [
                            "current_time",
                            "uint64"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "vote(byte[])void": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50Y2Jsb2NrIDAgMSAxNiA1CmJ5dGVjYmxvY2sgMHg3MzZlNjE3MDczNjg2Zjc0NWY3MDc1NjI2YzY5NjM1ZjZiNjU3OSAweDczNzQ2MTcyNzQ1Zjc0Njk2ZDY1IDB4NjU2ZTY0NWY3NDY5NmQ2NSAweCAweDZkNjU3NDYxNjQ2MTc0NjE1ZjY5NzA2NjczNWY2MzY5NjQgMHg3MTc1NmY3Mjc1NmQgMHg1NjVmIDB4MDY4MTAxCnR4biBOdW1BcHBBcmdzCmludGNfMCAvLyAwCj09CmJueiBtYWluX2wxMAp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweGUzOTI4OTBiIC8vICJjcmVhdGUoYnl0ZVtdLHN0cmluZyx1aW50NjQsdWludDY0LHVpbnQ2NCl2b2lkIgo9PQpibnogbWFpbl9sOQp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDkwYWFjNWVjIC8vICJib290c3RyYXAoYnl0ZVsxNl1bXSl2b2lkIgo9PQpibnogbWFpbl9sOAp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweGJjYjE1ODk2IC8vICJnZXRfcHJlY29uZGl0aW9ucyhieXRlW10pKHVpbnQ2NCx1aW50NjQsdWludDY0LHVpbnQ2NCkiCj09CmJueiBtYWluX2w3CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4Nzk4M2Y5NWMgLy8gInZvdGUoYnl0ZVtdKXZvaWQiCj09CmJueiBtYWluX2w2CmVycgptYWluX2w2Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmNhbGxzdWIgdm90ZV83CmludGNfMSAvLyAxCnJldHVybgptYWluX2w3Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmNhbGxzdWIgZ2V0cHJlY29uZGl0aW9uc182CnN0b3JlIDUKcHVzaGJ5dGVzIDB4MTUxZjdjNzUgLy8gMHgxNTFmN2M3NQpsb2FkIDUKY29uY2F0CmxvZwppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sODoKdHhuIE9uQ29tcGxldGlvbgppbnRjXzAgLy8gTm9PcAo9PQp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQomJgphc3NlcnQKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQpjYWxsc3ViIGJvb3RzdHJhcF8yCmludGNfMSAvLyAxCnJldHVybgptYWluX2w5Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCj09CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCnN0b3JlIDAKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgpzdG9yZSAxCnR4bmEgQXBwbGljYXRpb25BcmdzIDMKYnRvaQpzdG9yZSAyCnR4bmEgQXBwbGljYXRpb25BcmdzIDQKYnRvaQpzdG9yZSAzCnR4bmEgQXBwbGljYXRpb25BcmdzIDUKYnRvaQpzdG9yZSA0CmxvYWQgMApsb2FkIDEKbG9hZCAyCmxvYWQgMwpsb2FkIDQKY2FsbHN1YiBjcmVhdGVfMQppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sMTA6CnR4biBPbkNvbXBsZXRpb24KaW50Y18zIC8vIERlbGV0ZUFwcGxpY2F0aW9uCj09CmJueiBtYWluX2wxMgplcnIKbWFpbl9sMTI6CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CmFzc2VydApjYWxsc3ViIGRlbGV0ZV8wCmludGNfMSAvLyAxCnJldHVybgoKLy8gZGVsZXRlCmRlbGV0ZV8wOgpwcm90byAwIDAKdHhuIFNlbmRlcgpnbG9iYWwgQ3JlYXRvckFkZHJlc3MKPT0KLy8gdW5hdXRob3JpemVkCmFzc2VydApwdXNoaW50IFRNUExfREVMRVRBQkxFIC8vIFRNUExfREVMRVRBQkxFCi8vIENoZWNrIGFwcCBpcyBkZWxldGFibGUKYXNzZXJ0CnJldHN1YgoKLy8gY3JlYXRlCmNyZWF0ZV8xOgpwcm90byA1IDAKaW50Y18wIC8vIDAKYnl0ZWNfMCAvLyAic25hcHNob3RfcHVibGljX2tleSIKYXBwX2dsb2JhbF9nZXRfZXgKc3RvcmUgNwpzdG9yZSA2CmxvYWQgNwohCmFzc2VydApieXRlY18wIC8vICJzbmFwc2hvdF9wdWJsaWNfa2V5IgpmcmFtZV9kaWcgLTUKZXh0cmFjdCAyIDAKYXBwX2dsb2JhbF9wdXQKaW50Y18wIC8vIDAKYnl0ZWMgNCAvLyAibWV0YWRhdGFfaXBmc19jaWQiCmFwcF9nbG9iYWxfZ2V0X2V4CnN0b3JlIDkKc3RvcmUgOApsb2FkIDkKIQphc3NlcnQKYnl0ZWMgNCAvLyAibWV0YWRhdGFfaXBmc19jaWQiCmZyYW1lX2RpZyAtNApleHRyYWN0IDIgMAphcHBfZ2xvYmFsX3B1dAppbnRjXzAgLy8gMApieXRlY18xIC8vICJzdGFydF90aW1lIgphcHBfZ2xvYmFsX2dldF9leApzdG9yZSAxMQpzdG9yZSAxMApsb2FkIDExCiEKYXNzZXJ0CmJ5dGVjXzEgLy8gInN0YXJ0X3RpbWUiCmZyYW1lX2RpZyAtMwphcHBfZ2xvYmFsX3B1dAppbnRjXzAgLy8gMApieXRlY18yIC8vICJlbmRfdGltZSIKYXBwX2dsb2JhbF9nZXRfZXgKc3RvcmUgMTMKc3RvcmUgMTIKbG9hZCAxMwohCmFzc2VydApieXRlY18yIC8vICJlbmRfdGltZSIKZnJhbWVfZGlnIC0yCmFwcF9nbG9iYWxfcHV0CmludGNfMCAvLyAwCmJ5dGVjIDUgLy8gInF1b3J1bSIKYXBwX2dsb2JhbF9nZXRfZXgKc3RvcmUgMTUKc3RvcmUgMTQKbG9hZCAxNQohCmFzc2VydApieXRlYyA1IC8vICJxdW9ydW0iCmZyYW1lX2RpZyAtMQphcHBfZ2xvYmFsX3B1dApyZXRzdWIKCi8vIGJvb3RzdHJhcApib290c3RyYXBfMjoKcHJvdG8gMSAwCmludGNfMCAvLyAwCmR1cApieXRlY18zIC8vICIiCmludGNfMCAvLyAwCmR1cAp0eG4gU2VuZGVyCmdsb2JhbCBDcmVhdG9yQWRkcmVzcwo9PQovLyB1bmF1dGhvcml6ZWQKYXNzZXJ0CnB1c2hpbnQgMjUwMCAvLyAyNTAwCmZyYW1lX2RpZyAtMQppbnRjXzAgLy8gMApleHRyYWN0X3VpbnQxNgpmcmFtZV9idXJ5IDAKZnJhbWVfZGlnIDAKaW50Y18yIC8vIDE2CioKcHVzaGludCA0MDAgLy8gNDAwCioKKwpzdG9yZSAxNwppbnRjXzAgLy8gMApzdG9yZSAxNgpib290c3RyYXBfMl9sMToKbG9hZCAxNgpmcmFtZV9kaWcgLTEKaW50Y18wIC8vIDAKZXh0cmFjdF91aW50MTYKZnJhbWVfYnVyeSAxCmZyYW1lX2RpZyAxCjwKYnogYm9vdHN0cmFwXzJfbDMKZnJhbWVfZGlnIC0xCmludGNfMiAvLyAxNgpsb2FkIDE2CioKcHVzaGludCAyIC8vIDIKKwppbnRjXzIgLy8gMTYKZXh0cmFjdDMKZnJhbWVfYnVyeSAyCmJ5dGVjIDYgLy8gIlZfIgpmcmFtZV9kaWcgMgpjb25jYXQKYm94X2RlbApwb3AKYnl0ZWMgNiAvLyAiVl8iCmZyYW1lX2RpZyAyCmNvbmNhdApmcmFtZV9kaWcgNAppdG9iCmJveF9wdXQKbG9hZCAxNgppbnRjXzEgLy8gMQorCnN0b3JlIDE2CmIgYm9vdHN0cmFwXzJfbDEKYm9vdHN0cmFwXzJfbDM6CnJldHN1YgoKLy8gYWxsb3dlZF90b192b3RlCmFsbG93ZWR0b3ZvdGVfMzoKcHJvdG8gMSAxCnB1c2hpbnQgMjAwMCAvLyAyMDAwCnB1c2hpbnQgMTAgLy8gMTAKKwpzdG9yZSAxOAphbGxvd2VkdG92b3RlXzNfbDE6CmxvYWQgMTgKZ2xvYmFsIE9wY29kZUJ1ZGdldAo+CmJ6IGFsbG93ZWR0b3ZvdGVfM19sMwppdHhuX2JlZ2luCnB1c2hpbnQgNiAvLyBhcHBsCml0eG5fZmllbGQgVHlwZUVudW0KaW50Y18wIC8vIDAKaXR4bl9maWVsZCBGZWUKaW50Y18zIC8vIERlbGV0ZUFwcGxpY2F0aW9uCml0eG5fZmllbGQgT25Db21wbGV0aW9uCmJ5dGVjIDcgLy8gMHgwNjgxMDEKaXR4bl9maWVsZCBBcHByb3ZhbFByb2dyYW0KYnl0ZWMgNyAvLyAweDA2ODEwMQppdHhuX2ZpZWxkIENsZWFyU3RhdGVQcm9ncmFtCml0eG5fc3VibWl0CmIgYWxsb3dlZHRvdm90ZV8zX2wxCmFsbG93ZWR0b3ZvdGVfM19sMzoKdHhuIFNlbmRlcgpmcmFtZV9kaWcgLTEKYnl0ZWNfMCAvLyAic25hcHNob3RfcHVibGljX2tleSIKYXBwX2dsb2JhbF9nZXQKZWQyNTUxOXZlcmlmeV9iYXJlCnJldHN1YgoKLy8gdm90aW5nX29wZW4Kdm90aW5nb3Blbl80Ogpwcm90byAwIDEKZ2xvYmFsIExhdGVzdFRpbWVzdGFtcApieXRlY18xIC8vICJzdGFydF90aW1lIgphcHBfZ2xvYmFsX2dldAo+PQpnbG9iYWwgTGF0ZXN0VGltZXN0YW1wCmJ5dGVjXzIgLy8gImVuZF90aW1lIgphcHBfZ2xvYmFsX2dldAo8CiYmCnJldHN1YgoKLy8gYWxyZWFkeV92b3RlZAphbHJlYWR5dm90ZWRfNToKcHJvdG8gMCAxCnR4biBTZW5kZXIKZ2xvYmFsIENyZWF0b3JBZGRyZXNzCmI9PQpyZXRzdWIKCi8vIGdldF9wcmVjb25kaXRpb25zCmdldHByZWNvbmRpdGlvbnNfNjoKcHJvdG8gMSAxCmJ5dGVjXzMgLy8gIiIKaW50Y18wIC8vIDAKZHVwbiA1CmJ5dGVjXzMgLy8gIiIKZHVwCmNhbGxzdWIgdm90aW5nb3Blbl80CmZyYW1lX2J1cnkgMQpmcmFtZV9kaWcgLTEKZXh0cmFjdCAyIDAKY2FsbHN1YiBhbGxvd2VkdG92b3RlXzMKZnJhbWVfYnVyeSAyCmNhbGxzdWIgYWxyZWFkeXZvdGVkXzUKZnJhbWVfYnVyeSAzCmdsb2JhbCBMYXRlc3RUaW1lc3RhbXAKZnJhbWVfYnVyeSA0CmZyYW1lX2RpZyAxCml0b2IKZnJhbWVfZGlnIDIKaXRvYgpjb25jYXQKZnJhbWVfZGlnIDMKaXRvYgpjb25jYXQKZnJhbWVfZGlnIDQKaXRvYgpjb25jYXQKZnJhbWVfYnVyeSAwCnJldHN1YgoKLy8gdm90ZQp2b3RlXzc6CnByb3RvIDEgMApmcmFtZV9kaWcgLTEKZXh0cmFjdCAyIDAKY2FsbHN1YiBhbGxvd2VkdG92b3RlXzMKYXNzZXJ0CmNhbGxzdWIgdm90aW5nb3Blbl80CmFzc2VydApjYWxsc3ViIGFscmVhZHl2b3RlZF81CmFzc2VydApyZXRzdWI=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 2,
            "num_uints": 3
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "end_time": {
                    "type": "uint64",
                    "key": "end_time",
                    "descr": "The unix timestamp of the ending time of voting."
                },
                "metadata_ipfs_cid": {
                    "type": "bytes",
                    "key": "metadata_ipfs_cid",
                    "descr": "The IPFS content ID of the voting metadata file."
                },
                "quorum": {
                    "type": "uint64",
                    "key": "quorum",
                    "descr": "The minimum number of voters to reach quorum."
                },
                "snapshot_public_key": {
                    "type": "bytes",
                    "key": "snapshot_public_key",
                    "descr": "The public key of the Ed25519 compatible private key that was used to encrypt entries in the vote gating snapshot."
                },
                "start_time": {
                    "type": "uint64",
                    "key": "start_time",
                    "descr": "The unix timestamp of the starting time of voting."
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "VotingRoundApp",
        "methods": [
            {
                "name": "create",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "snapshot_public_key"
                    },
                    {
                        "type": "string",
                        "name": "metadata_ipfs_cid"
                    },
                    {
                        "type": "uint64",
                        "name": "start_time"
                    },
                    {
                        "type": "uint64",
                        "name": "end_time"
                    },
                    {
                        "type": "uint64",
                        "name": "quorum"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "bootstrap",
                "args": [
                    {
                        "type": "byte[16][]",
                        "name": "answers"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "get_preconditions",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "signature"
                    }
                ],
                "returns": {
                    "type": "(uint64,uint64,uint64,uint64)"
                }
            },
            {
                "name": "vote",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "signature"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "delete_application": "CALL"
    }
}